# -*- coding: utf-8 -*-
"""modelling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jPVxhwKHPg8wYzjDLugqMBJxlSagNPpp
"""

!pip install mlflow scikit-learn pandas matplotlib seaborn

pip install python-dotenv

import os
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, f1_score
import mlflow
import mlflow.sklearn
from dotenv import load_dotenv
import joblib

# 1. Load variabel rahasia dari .env
load_dotenv()

# 2. Load dataset
df = pd.read_csv('winequality_red_preprocessed.csv')
X = df.drop('quality', axis=1)
y = df['quality']

# 3. Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 4. Konfigurasi MLflow
mlflow.set_tracking_uri(os.getenv("MLFLOW_TRACKING_URI"))
os.environ["MLFLOW_TRACKING_USERNAME"] = os.getenv("MLFLOW_TRACKING_USERNAME")
os.environ["MLFLOW_TRACKING_PASSWORD"] = os.getenv("MLFLOW_TRACKING_PASSWORD")
mlflow.set_experiment("wine_quality_rf_experiment")

# 5. Loop eksperimen (grid search manual)
n_estimators_list = [50, 100, 150]
max_depth_list = [3, 5, 7]

for n_estimators in n_estimators_list:
    for max_depth in max_depth_list:
        with mlflow.start_run():
            model = RandomForestClassifier(n_estimators=n_estimators, max_depth=max_depth, random_state=42)
            model.fit(X_train, y_train)

            y_pred = model.predict(X_test)
            acc = accuracy_score(y_test, y_pred)
            f1 = f1_score(y_test, y_pred, average='weighted')

            # Log parameter dan metric
            mlflow.log_param("n_estimators", n_estimators)
            mlflow.log_param("max_depth", max_depth)
            mlflow.log_metric("accuracy", acc)
            mlflow.log_metric("f1_score", f1)

            # Simpan model lokal + log sebagai artifact
            model_filename = f"rf_model_{n_estimators}_{max_depth}.pkl"
            joblib.dump(model, model_filename)
            mlflow.log_artifact(model_filename)

            print(f"Run selesai: n_estimators={n_estimators}, max_depth={max_depth}")
            print(f"Accuracy: {acc:.4f}, F1 Score: {f1:.4f}")